apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply from: 'and_res_guard.gradle'
//apply plugin: 'io.objectbox'

//打包时间
static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions "default"
        multiDexEnabled true
        resConfigs "zh", "en"//保留中文和英文资源
//        ndk {
//            // 设置支持的so库架构，设置一个可以减小包的大小
//            abiFilters "armeabi-v7a" //, "arm64-v8a"
//        }
    }
    //使用Kotlin实验特性
    androidExtensions {
        experimental = true
    }
    kapt {
        correctErrorTypes = true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    compileOptions {
        sourceCompatibility rootProject.ext.android.javaSourceCompatibility
        targetCompatibility rootProject.ext.android.javaTargetCompatibility
    }

    buildTypes {
        release {
            // 不开启混淆
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            // 开启ZipAlign优化
            zipAlignEnabled true
            //签名
//            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {

            // 不开启混淆
            minifyEnabled false
            // 不开启ZipAlign优化
            zipAlignEnabled false
            // 不移除无用的resource文件
            shrinkResources false
            //签名
//            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
//            assets.srcDirs = ['src/assets', 'src/assets/']
        }
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.all {
        //名称
        String appName = ""
        String path = getProjectDir().getPath() + "/src/main/res/values/strings.xml"
        new XmlSlurper().parse(path)."string".find { name ->
            if (name."@name" == "app_name") {
                appName = name
                return true
            }
        }
        //正式版还是测试版
        String typeName = buildType.name
        typeName = typeName.substring(0, 1).toUpperCase() + typeName.substring(1).toLowerCase()
        //build名称
        String buildVer = String.valueOf(rootProject.ext.android.versionCode)
        String buildName = "_build" + buildVer
        //编译日期
        String buildTime = "_" + String.valueOf(rootProject.ext.android.buildTime)
        //打包的电脑
        String computer = "_" + String.valueOf(rootProject.ext.android.computer)
        //后缀名
        String suffix = ".apk"
        //生成输出文件名称
        outputFileName = "${appName}${typeName}${buildName}${buildTime}${computer}${suffix}"
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.dependencies.kotlin_jdk
    kapt rootProject.ext.dependencies.epoxyProcessor
    implementation 'com.yzy:social:2.0.2'
    implementation project(":ybase")
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'
//    implementation 'com.yzy:ybase:1.1.0'
    implementation rootProject.ext.dependencies.bugly
    implementation rootProject.ext.dependencies.bugly_native
    implementation rootProject.ext.dependencies.smart
    implementation rootProject.ext.dependencies.viewpager2
    implementation rootProject.ext.dependencies.lottie
    implementation rootProject.ext.dependencies.rxpermission
    implementation rootProject.ext.dependencies.mmkv
    implementation rootProject.ext.dependencies.live_event_bus
//    implementation rootProject.ext.dependencies.fragment_ktx
//    implementation rootProject.ext.dependencies.objectBox_RxJava
//    implementation rootProject.ext.dependencies.objectBox_Kotlin
    implementation 'me.devilsen:CZXing:0.9.8'
    //web https://github.com/Justson/AgentWeb
    implementation 'com.just.agentweb:agentweb:4.1.2'
}
//放在这省的忘
//@SuppressLint("ParcelCreator")
//@Parcelize
