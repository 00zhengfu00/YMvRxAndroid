apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'and_res_guard.gradle'
//打包时间
static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions "default"
        multiDexEnabled true
        resConfigs "zh", "en"//保留中文和英文资源
    }
    //使用Kotlin实验特性
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility rootProject.ext.android.javaSourceCompatibility
        targetCompatibility rootProject.ext.android.javaTargetCompatibility
    }
    productFlavors {
        pj {
            applicationId "cn.aiguanggao.pj"
            manifestPlaceholders = [app_icon: "@mipmap/ic_launcher", app_roundIcon: "@mipmap/ic_launcher", app_name: "扑金"]
        }
        tengxun {
            applicationId "cn.aiguanggao.pj"
            manifestPlaceholders = [app_icon: "@mipmap/ic_launcher", app_roundIcon: "@mipmap/ic_launcher", app_name: "扑金"]
        }
        xiaomi {
            applicationId "cn.aiguanggao.pj"
            manifestPlaceholders = [app_icon: "@mipmap/ic_launcher", app_roundIcon: "@mipmap/ic_launcher", app_name: "扑金"]
        }
    }

    // 3.0 gradle 批量打包
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            //输出apk名称为：渠道名_版本名_时间.apk
            outputFileName = "${variant.productFlavors[0].name}Member_v${defaultConfig.versionName}_${releaseTime()}.apk"
        }
    }
    //可以配置不同版本的keystore
    signingConfigs {
        debug {
            storeFile file(DEBUG_STORE_FILE_AIMYMUSIC)
            storePassword DEBUG_STORE_PASSWORD_AIMYMUSIC
            keyAlias DEBUG_KEY_ALIAS_AIMYMUSIC
            keyPassword DEBUG_KEY_PASSWORD_AIMYMUSIC
        }
        release {
            storeFile file(RELEASE_STORE_FILE_AIMYMUSIC)
            storePassword RELEASE_STORE_PASSWORD_AIMYMUSIC
            keyAlias RELEASE_KEY_ALIAS_AIMYMUSIC
            keyPassword RELEASE_KEY_PASSWORD_AIMYMUSIC
        }
    }

    buildTypes {
        release {
            // release模式下，不显示log
            buildConfigField("boolean", "LOG_DEBUG", "false")
            // 不开启混淆
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            // 开启ZipAlign优化
            zipAlignEnabled true
            //签名
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {

            // debug模式下，显示log
            buildConfigField("boolean", "LOG_DEBUG", "true")
            // 不开启混淆
            minifyEnabled false
            // 不开启ZipAlign优化
            zipAlignEnabled false
            // 不移除无用的resource文件
            shrinkResources false
            //签名
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }
    }
//    dataBinding {
//        enabled true
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(":commonlibrary")
    implementation project(":sociallibrary")
    implementation project(":push")
    kapt 'com.airbnb.android:epoxy-processor:3.7.0'
    debugImplementation rootProject.ext.dependencies.leakcanary_debug
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-14'
}
//放在这省的忘
//@SuppressLint("ParcelCreator")
//@Parcelize

