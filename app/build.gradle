apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
//打包时间
static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions "default"
        multiDexEnabled true
        resConfigs "zh", "en"//保留中文和英文资源
//        ndk {
//            abiFilters 'armeabi-v7a' //, 'arm64-v8a'
//        }
    }
    //使用Kotlin实验特性
    androidExtensions {
        experimental = true
    }
    kapt {
        correctErrorTypes = true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
//    dataBinding {
//        enabled = true
//    }
    buildFeatures{
        dataBinding = true
        viewBinding = false
    }
    compileOptions {
        sourceCompatibility rootProject.ext.android.javaSourceCompatibility
        targetCompatibility rootProject.ext.android.javaTargetCompatibility
    }
    //配置不同版本的keystore
    signingConfigs {
        debug {
            storeFile file(STORE_FILE_ABASE)
            storePassword STORE_PASSWORD_ABASE
            keyAlias KEY_ALIAS_ABASE
            keyPassword KEY_PASSWORD_ABASE
        }
        release {
            storeFile file(STORE_FILE_ABASE)
            storePassword STORE_PASSWORD_ABASE
            keyAlias KEY_ALIAS_ABASE
            keyPassword KEY_PASSWORD_ABASE
        }
    }
    buildTypes {
        debug {
            debuggable true
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable false
            zipAlignEnabled true
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
//            assets.srcDirs = ['src/assets', 'src/assets/']
        }
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.all {
        //名称
        String appName = ""
        String path = getProjectDir().getPath() + "/src/main/res/values/strings.xml"
        new XmlSlurper().parse(path)."string".find { name ->
            if (name."@name" == "app_name") {
                appName = name
                return true
            }
        }
        //正式版还是测试版
        String typeName = buildType.name
        typeName = typeName.substring(0, 1).toUpperCase() + typeName.substring(1).toLowerCase()
        //build名称
        String buildVer = String.valueOf(rootProject.ext.android.versionCode)
        String buildName = "_build" + buildVer
        //编译日期
        String buildTime = "_" + String.valueOf(rootProject.ext.android.buildTime)
        //打包的电脑
        String computer = "_" + String.valueOf(rootProject.ext.android.computer)
        //后缀名
        String suffix = ".apk"
        //生成输出文件名称
        outputFileName = "${appName}${typeName}${buildName}${buildTime}${computer}${suffix}"
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(":ybase")
    api 'com.github.bumptech.glide:glide:4.11.0'
    api 'com.github.bumptech.glide:okhttp3-integration:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.tencent.bugly:crashreport:3.1.9'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
    //https://github.com/airbnb/lottie-android
    implementation 'com.airbnb.android:lottie:3.4.0'
    //https://github.com/JeremyLiao/LiveEventBus
    implementation 'com.jeremyliao:live-event-bus-x:1.6.1'
    //web https://github.com/Justson/AgentWeb
    implementation 'com.just.agentweb:agentweb:4.1.3'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.2'
    //https://github.com/square/leakcanary
//    implementation 'com.squareup.leakcanary:leakcanary-android:2.2'
    //FlexboxLayout https://github.com/google/flexbox-layout
    implementation 'com.google.android:flexbox:2.0.1'

    //RevealLayout
    implementation 'com.github.goweii:RevealLayout:1.1.1'

    //防崩溃
    implementation 'cat.ereza:customactivityoncrash:2.3.0'
    //https://github.com/airbnb/epoxy
//    implementation 'com.airbnb.android:epoxy:3.9.0'
//    kapt 'com.airbnb.android:epoxy-processor:3.9.0'
}
//放在这省的忘
//@SuppressLint("ParcelCreator")
//@Parcelize
