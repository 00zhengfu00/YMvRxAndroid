<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>


        <item name="android:statusBarColor">@android:color/white</item>
        <item name="android:splitMotionEvents">false</item>
        <!--背景色-->
        <item name="android:windowBackground">@android:color/white</item>
        <!--光标等控件的选中状态颜色-->
        <item name="android:colorControlActivated">#30D18B</item>
        <!-- 设置无标题-->
        <item name="windowNoTitle">true</item>
        <item name="android:includeFontPadding">false</item>
    </style>

    <style name="SplashTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="android:statusBarColor">@android:color/transparent</item>

        <!--背景色-->
        <item name="android:windowBackground">@drawable/splash_bg</item>
    </style>

    <style name="AppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
<!--        <item name="android:windowDrawsSystemBarBackgrounds">true</item>-->
<!--        <item name="android:statusBarColor">@android:color/transparent</item>-->
    </style>

    <style name="follow_style" parent="Widget.AppCompat.ProgressBar">
        <item name="android:indeterminateTint">@color/colorAccent</item>
        <item name="android:indeterminateTintMode">src_atop</item>
    </style>

    <attr name="qmui_backgroundColor" format="color" />
    <attr name="qmui_borderColor" format="color" />
    <attr name="qmui_borderWidth" format="dimension" />
    <!-- 圆角是否要自适应为 View 高度的一半 -->
    <attr name="qmui_isRadiusAdjustBounds" format="boolean" />
    <!-- 同时指定四个方向的圆角大小 -->
    <attr name="qmui_radius" format="dimension" />
    <!-- 指定左上方圆角的大小 -->
    <attr name="qmui_radiusTopLeft" format="dimension" />
    <!-- 指定右上方圆角的大小 -->
    <attr name="qmui_radiusTopRight" format="dimension" />
    <!-- 指定左下方圆角的大小 -->
    <attr name="qmui_radiusBottomLeft" format="dimension" />
    <!-- 指定右下方圆角的大小 -->
    <attr name="qmui_radiusBottomRight" format="dimension" />
    <!--**********************************************
        *                  qmui btn                      *
        **********************************************-->
    <attr name="qmui_round_btn_text_size" format="dimension" />
    <attr name="qmui_round_btn_border_width" format="dimension" />
    <!-- android 5.0一下不能再selector中用?attr,必须要整个drawable由使用者提供 -->
    <attr name="qmui_round_btn_bg_color" format="color" />
    <attr name="qmui_round_btn_border_color" format="color" />
    <attr name="qmui_round_btn_text_color" format="color" />

    <declare-styleable name="QMUIRoundButton">
        <attr name="qmui_backgroundColor" />
        <attr name="qmui_borderColor" />
        <attr name="qmui_borderWidth" />
        <attr name="qmui_isRadiusAdjustBounds" />
        <attr name="qmui_radius" />
        <attr name="qmui_radiusTopLeft" />
        <attr name="qmui_radiusTopRight" />
        <attr name="qmui_radiusBottomLeft" />
        <attr name="qmui_radiusBottomRight" />
    </declare-styleable>
    <style name="imui_line">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">1px</item>
        <item name="android:background">@color/imui_line</item>
    </style>

    <declare-styleable name="CommonShapeButton">
        <!--shape模式-->
        <attr name="csb_shapeMode" format="enum">
            <enum name="rectangle" value="0" />
            <enum name="oval" value="1" />
            <enum name="line" value="2" />
            <enum name="ring" value="3" />
        </attr>
        <!--填充颜色-->
        <attr name="csb_fillColor" format="color" />
        <!--按压颜色-->
        <attr name="csb_pressedColor" format="color" />
        <!--描边颜色-->
        <attr name="csb_strokeColor" format="color" />
        <!--描边宽度-->
        <attr name="csb_strokeWidth" format="dimension" />
        <!--圆角大小-->
        <attr name="csb_cornerRadius" format="dimension" />
        <!--圆角位置-->
        <attr name="csb_cornerPosition">
            <flag name="topLeft" value="1" />
            <flag name="topRight" value="2" />
            <flag name="bottomRight" value="4" />
            <flag name="bottomLeft" value="8" />
        </attr>
        <!--是否开启动效-->
        <attr name="csb_activeEnable" format="boolean" />
        <!--drawable位置-->
        <attr name="csb_drawablePosition" format="enum">
            <enum name="left" value="0" />
            <enum name="top" value="1" />
            <enum name="right" value="2" />
            <enum name="bottom" value="3" />
        </attr>
        <!--渐变开始颜色-->
        <attr name="csb_startColor" format="color" />

        <attr name="csb_txtGravity" format="boolean" />
        <!--渐变结束颜色-->
        <attr name="csb_endColor" format="color" />
        <!--渐变方向-->
        <attr name="csb_orientation" format="enum">
            <enum name="TOP_BOTTOM" value="0" />
            <enum name="LEFT_RIGHT" value="1" />
        </attr>
    </declare-styleable>

    <!-- Define your custom dialog theme here extending from base -->
    <style name="AppDialogTheme" parent="Theme.AppCompat.Light.Dialog">
        <!-- Define color properties as desired -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="colorControlNormal">@color/white</item>
        <item name="android:textColorHighlight">@color/black</item>
        <!-- Define window properties as desired -->
        <!--是否显示title-->
        <item name="android:windowNoTitle">false</item>
        <!--是否是全屏-->
        <item name="android:windowFullscreen">false</item>
        <!--背景颜色-->
        <item name="android:windowBackground">@color/transparent</item>
        <!--是否浮现在activity之上-->
        <item name="android:windowIsFloating">true</item>
        <!--点击空白是否消失-->
        <item name="android:windowCloseOnTouchOutside">true</item>
    </style>

    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />

    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
</resources>